generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  kakaoId      BigInt    @unique
  nickname     String
  refreshToken String?
  sessions     Session[] @relation("SessionOwner")
  joined       Session[] @relation("SessionParticipants") // 세션 참가자
  createdAt    DateTime  @default(now())
  chatMessages ChatMessage[]
}

model Session {
  id           Int       @id @default(autoincrement())
  title        String
  mode         String
  language     String
  joinCode     String    @unique
  isEnded      Boolean   @default(false)
  ownerId      Int
  owner        User      @relation("SessionOwner", fields: [ownerId], references: [id])
  participants User[]    @relation("SessionParticipants") // ← 철자 맞춤
  codeLogs     String?
  chatLogs     Json?
  createdAt    DateTime  @default(now())
  chatMessages ChatMessage[]
}

model ChatMessage {
  id         Int       @id @default(autoincrement())
  session    Session   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId  Int
  sender     User      @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId   Int
  message    String
  createdAt  DateTime  @default(now())

  @@index([sessionId])
  @@index([senderId])
}
